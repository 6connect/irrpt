#!/usr/bin/env php
<?php

$currentpath = dirname(realpath(__FILE__));
require("{$currentpath}/../conf/irrpt.conf");
require("{$currentpath}/../inc/pfxlist.inc");
require("{$currentpath}/../inc/ipv6.inc");
require("{$currentpath}/../inc/status.inc");
require("{$currentpath}/../inc/utils.inc");

/* Load our defaults from the master config file */
$o_pfxstr	    = $cfg['pfxgen']['default_pfxstr'];
$o_pfxstr_v6  = $cfg['pfxgen']['default_pfxstr_v6'];
$o_pfxlen	    = $cfg['pfxgen']['default_pfxlen'];
$o_pfxlen_v6	= $cfg['pfxgen']['default_pfxlen_v6'];
$o_format	    = $cfg['pfxgen']['default_format'];

$o_4 = 0; /* Default to fetch both v4 and v6 by setting this to 0 */
$o_6 = 0; /* Default to fetch both v4 and v6 by setting this to 0 */


function usage($progname)
{
	global $o_pfxstr;
	global $o_pfxstr_v6;
	global $o_pfxlen;
	global $o_pfxlen_v6;
	global $o_format;

	printf("Usage: %s [-h46] [-p pfxstr] [-p6 pfxstr_v6] [-l pfxlength] [-l6 pfxlength_v6] [-f format] <asn>\n",
		$progname);
	printf("  pfxstr       - The prefix-list name format string (default: %s)\n", $o_pfxstr);
	printf("  pfxstr_v6    - The prefix-list name format string (default: %s)\n", $o_pfxstr_v6);
	printf("  pfxlength    - The max length more-specific that will be allowed (default: %s)\n", $o_pfxlen);
	printf("  pfxlength_v6 - The max length more-specific that will be allowed for v6 (default: %s)\n", $o_pfxlen_v6);
	printf("  format       - The output format for a specific router type (default: %s)\n", $o_format);
	printf("                 Currently supported values are:\n");
	printf("                 cisco\n");
	printf("                 extreme\n");
	printf("                 foundry\n");
	printf("                 force10\n");
	printf("                 juniper\n");
	exit(1);
}


/* Parse through the cmdline options. */
for ($offset = 1; $offset < $_SERVER['argc']; $offset++) {
	if (substr($_SERVER['argv'][$offset], 0, 1) != "-")
		break;

	switch($_SERVER['argv'][$offset]) {
	    case "-h":
	    case "--help":
		usage($_SERVER['argv'][0]);

	    case "-p":
	    case "--pfxstr":
                $o_pfxstr = $_SERVER['argv'][++$offset];
		break;

	    case "-p6":
	    case "--pfxstr_v6":
                $o_pfxstr_v6 = $_SERVER['argv'][++$offset];
		break;

	    case "-l":
	    case "--pfxlength":
                $o_pfxlength = $_SERVER['argv'][++$offset];
		break;

	    case "-l6":
	    case "--pfxlength_v6":
                $o_pfxlength_v6 = $_SERVER['argv'][++$offset];
		break;

      case "-4":
      case "--4":
    $o_4 = 1;
    break;

      case "-6":
      case "--6":
    $o_6 = 1;
    break;

	    case "-f":
	    case "--format":
                switch (strtolower($_SERVER['argv'][++$offset])) {
		    case "cisco":
		    case "csco":
		    case "foundry":
		    case "fdry":
			$o_format = "cisco";
			break;

		    case "ciscoxr":
		    case "iosxr":
			$o_format = "iosxr";
			break;

		    case "juniper":
		    case "jnpr":
			$o_format = "juniper";
			break;

		    case "extreme":
		    case "extr":
			$o_format = "extreme";
			break;

		    case "force10":
		    case "f10":
			$o_format = "force10";
			break;

		    default:
			printf("Unknown format, aborting.\n");
			exit(1);
		}

		break;

	}
}

/* Check for minimum number of args after cmdline */
if (($_SERVER['argc'] - $offset) < 1)
	usage($_SERVER['argv'][0]);

$asn = $_SERVER['argv'][$offset+0];


if (pfxlist_generate($o_format, $asn, $o_pfxstr, $o_pfxstr_v6, $o_pfxlen, $o_pfxlen_v6, $o_4, $o_6) < 0) {
	printf("Error generating prefix-list, aborting.\n");
	exit(1);
}

?>
